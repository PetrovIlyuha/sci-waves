{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courses Projects In Work\\\\Portfolio\\\\sci-waves\\\\client\\\\pages\\\\auth\\\\password\\\\forgot.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { API } from \"../../../config.js\";\nimport Layout from \"../../../components/Layout\";\n\nconst ForgotPassword = () => {\n  const {\n    0: userState,\n    1: setUserState\n  } = useState({\n    email: \"\",\n    buttonText: \"Forgot Password\",\n    success: \"\",\n    error: \"\"\n  });\n  const {\n    email,\n    buttonText,\n    success,\n    error\n  } = userState;\n  useEffect(() => {\n    {\n      success && toast.success(`${success}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n    {\n      error && toast.error(`${error}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  }, [success, error]);\n\n  const handleChange = e => {\n    setUserState(_objectSpread(_objectSpread({}, userState), {}, {\n      email: e.target.value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setUserState(_objectSpread(_objectSpread({}, userState), {}, {\n      buttonText: \"Sending...\"\n    }));\n\n    try {\n      const response = await axios.put(`${API}/forgot-password`, {\n        email\n      });\n      setUserState(_objectSpread(_objectSpread({}, userState), {}, {\n        buttonText: \"Check Email\",\n        success: response.data.message\n      }));\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n      setUserState(_objectSpread(_objectSpread({}, userState), {}, {\n        buttonText: \"Try Again\",\n        error: err\n      }));\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center\",\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Reset Your Password\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-success\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Your email\"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    placeholder: \"What email will be receiving reset password link?\",\n    onChange: handleChange,\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, buttonText))))), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["D:/Courses Projects In Work/Portfolio/sci-waves/client/pages/auth/password/forgot.jsx"],"names":["useState","useEffect","axios","Router","ToastContainer","toast","API","Layout","ForgotPassword","userState","setUserState","email","buttonText","success","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleChange","e","target","value","handleSubmit","preventDefault","response","put","data","message","console","log","err","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport Router from \"next/router\"\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport { API } from \"../../../config.js\"\r\nimport Layout from \"../../../components/Layout\"\r\n\r\nconst ForgotPassword = () => {\r\n  const [userState, setUserState] = useState({\r\n    email: \"\",\r\n    buttonText: \"Forgot Password\",\r\n    success: \"\",\r\n    error: \"\",\r\n  })\r\n  const { email, buttonText, success, error } = userState\r\n\r\n  useEffect(() => {\r\n    {\r\n      success &&\r\n        toast.success(`${success}`, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n    {\r\n      error &&\r\n        toast.error(`${error}`, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n  }, [success, error])\r\n\r\n  const handleChange = e => {\r\n    setUserState({ ...userState, email: e.target.value })\r\n  }\r\n  const handleSubmit = async e => {\r\n    e.preventDefault()\r\n    setUserState({ ...userState, buttonText: \"Sending...\" })\r\n    try {\r\n      const response = await axios.put(`${API}/forgot-password`, { email })\r\n      setUserState({\r\n        ...userState,\r\n        buttonText: \"Check Email\",\r\n        success: response.data.message,\r\n      })\r\n      console.log(response)\r\n    } catch (err) {\r\n      console.log(err)\r\n      setUserState({\r\n        ...userState,\r\n        buttonText: \"Try Again\",\r\n        error: err,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          <h1 className='text-center' style={{ color: \"blue\" }}>\r\n            Reset Your Password\r\n          </h1>\r\n          <br />\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label className='text-success' htmlFor='email'>\r\n                Your email\r\n              </label>\r\n              <input\r\n                type='email'\r\n                name='email'\r\n                className='form-control'\r\n                placeholder='What email will be receiving reset password link?'\r\n                onChange={handleChange}\r\n                value={email}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <button className='btn btn-outline-danger'>{buttonText}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n"]},"metadata":{},"sourceType":"module"}