{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courses Projects In Work\\\\Portfolio\\\\sci-waves\\\\client\\\\pages\\\\register.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../components/Layout\";\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\nimport { API } from \"../config.js\";\nconsole.log(API);\n\nconst Register = () => {\n  const {\n    0: formState,\n    1: setFormState\n  } = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: \"\",\n    buttonText: \"Register\"\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success,\n    buttonText\n  } = formState;\n  useEffect(() => {\n    {\n      success && toast.success(`${success}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n    {\n      error && toast.error(`${error}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  }, [success, error]);\n\n  const handleFormInputChange = name => e => {\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      [name]: e.target.value,\n      error: \"\",\n      success: \"\",\n      buttonText: \"Register\"\n    }));\n  };\n\n  const handleFormSubmit = async e => {\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      buttonText: \"Sending!\"\n    }));\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(`http://localhost:4000/api/register`, {\n        name,\n        email,\n        password\n      });\n      setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        buttonText: \"Submitted\",\n        success: response.data.message\n      }));\n    } catch (error) {\n      console.log(error);\n      setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const registerForm = () => __jsx(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Register\"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Username\"), __jsx(\"input\", {\n    onChange: handleFormInputChange(\"name\"),\n    type: \"text\",\n    value: name,\n    id: \"name\",\n    className: \"form-control\",\n    placeholder: \"Ironman...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    onChange: handleFormInputChange(\"email\"),\n    type: \"email\",\n    value: email,\n    id: \"email\",\n    className: \"form-control\",\n    placeholder: \"warrior@galaxy.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    value: password,\n    id: \"password\",\n    className: \"form-control\",\n    onChange: handleFormInputChange(\"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"btn mx-auto btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"register__page_layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"cloud__register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"register-overlay col-md-6 offset-3 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, registerForm()), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["D:/Courses Projects In Work/Portfolio/sci-waves/client/pages/register.jsx"],"names":["useState","useEffect","axios","Layout","ToastContainer","toast","Flip","API","console","log","Register","formState","setFormState","name","email","password","error","success","buttonText","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleFormInputChange","e","target","value","handleFormSubmit","preventDefault","response","post","data","message","registerForm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Layout from \"../components/Layout\";\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport { API } from \"../config.js\";\r\n\r\nconsole.log(API);\r\n\r\nconst Register = () => {\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: \"\",\r\n    buttonText: \"Register\",\r\n  });\r\n\r\n  const { name, email, password, error, success, buttonText } = formState;\r\n\r\n  useEffect(() => {\r\n    {\r\n      success &&\r\n        toast.success(`${success}`, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n    }\r\n    {\r\n      error &&\r\n        toast.error(`${error}`, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n    }\r\n  }, [success, error]);\r\n\r\n  const handleFormInputChange = (name) => (e) => {\r\n    setFormState({\r\n      ...formState,\r\n      [name]: e.target.value,\r\n      error: \"\",\r\n      success: \"\",\r\n      buttonText: \"Register\",\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    setFormState({ ...formState, buttonText: \"Sending!\" });\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`http://localhost:4000/api/register`, {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      setFormState({\r\n        ...formState,\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        buttonText: \"Submitted\",\r\n        success: response.data.message,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      setFormState({ ...formState, error: error.response.data.error });\r\n    }\r\n  };\r\n  const registerForm = () => (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <h2>Register</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Username</label>\r\n        <input\r\n          onChange={handleFormInputChange(\"name\")}\r\n          type=\"text\"\r\n          value={name}\r\n          id=\"name\"\r\n          className=\"form-control\"\r\n          placeholder=\"Ironman...\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          onChange={handleFormInputChange(\"email\")}\r\n          type=\"email\"\r\n          value={email}\r\n          id=\"email\"\r\n          className=\"form-control\"\r\n          placeholder=\"warrior@galaxy.com\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          id=\"password\"\r\n          className=\"form-control\"\r\n          onChange={handleFormInputChange(\"password\")}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <button className=\"btn mx-auto btn-outline-warning\">\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"register__page_layout\">\r\n        <div className=\"cloud__register\"></div>\r\n        <div className=\"register-overlay col-md-6 offset-3 mt-5\">\r\n          {registerForm()}\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}