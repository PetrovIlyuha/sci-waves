{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Courses Projects In Work\\\\Portfolio\\\\sci-waves\\\\client\\\\pages\\\\auth\\\\password\\\\reset\\\\[token].jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Router, { withRouter } from \"next/router\";\nimport jwt from \"jsonwebtoken\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { API } from \"../../../../config.js\";\nimport Layout from \"../../../../components/Layout\";\n\nvar ResetPassword = function ResetPassword(_ref) {\n  _s();\n\n  var router = _ref.router;\n  console.log(router.query.token);\n\n  var _useState = useState({\n    name: \"\",\n    token: \"\",\n    newPassword: \"\",\n    buttonText: \"Reset Password\",\n    success: \"\",\n    error: \"\"\n  }),\n      userState = _useState[0],\n      setUserState = _useState[1];\n\n  var name = userState.name,\n      token = userState.token,\n      newPassword = userState.newPassword,\n      buttonText = userState.buttonText,\n      success = userState.success,\n      error = userState.error;\n  useEffect(function () {\n    var _jwt$decode = jwt.decode(router.query.token),\n        name = _jwt$decode.name; // if (name) {\n    //   setUserState({ ...userState, name: name })\n    // }\n\n\n    console.log(name);\n  }, []);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"Reset Password\", __jsx(ToastContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ResetPassword, \"ygnsOc0P75eIBY0RWKLHMsHeeko=\");\n\n_c = ResetPassword;\nexport default _c2 = withRouter(ResetPassword);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ResetPassword\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Courses Projects In Work/Portfolio/sci-waves/client/pages/auth/password/reset/[token].jsx"],"names":["useState","useEffect","axios","Router","withRouter","jwt","ToastContainer","toast","API","Layout","ResetPassword","router","console","log","query","token","name","newPassword","buttonText","success","error","userState","setUserState","decode"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,GAAT,QAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAP,CAAaC,KAAzB;;AADoC,kBAEFf,QAAQ,CAAC;AACzCgB,IAAAA,IAAI,EAAE,EADmC;AAEzCD,IAAAA,KAAK,EAAE,EAFkC;AAGzCE,IAAAA,WAAW,EAAE,EAH4B;AAIzCC,IAAAA,UAAU,EAAE,gBAJ6B;AAKzCC,IAAAA,OAAO,EAAE,EALgC;AAMzCC,IAAAA,KAAK,EAAE;AANkC,GAAD,CAFN;AAAA,MAE7BC,SAF6B;AAAA,MAElBC,YAFkB;;AAAA,MAU5BN,IAV4B,GAU6BK,SAV7B,CAU5BL,IAV4B;AAAA,MAUtBD,KAVsB,GAU6BM,SAV7B,CAUtBN,KAVsB;AAAA,MAUfE,WAVe,GAU6BI,SAV7B,CAUfJ,WAVe;AAAA,MAUFC,UAVE,GAU6BG,SAV7B,CAUFH,UAVE;AAAA,MAUUC,OAVV,GAU6BE,SAV7B,CAUUF,OAVV;AAAA,MAUmBC,KAVnB,GAU6BC,SAV7B,CAUmBD,KAVnB;AAYpCnB,EAAAA,SAAS,CAAC,YAAM;AAAA,sBACGI,GAAG,CAACkB,MAAJ,CAAWZ,MAAM,CAACG,KAAP,CAAaC,KAAxB,CADH;AAAA,QACNC,IADM,eACNA,IADM,EAEd;AACA;AACA;;;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA1BD;;GAAMN,a;;KAAAA,a;AA4BN,qBAAeN,UAAU,CAACM,aAAD,CAAzB","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport Router, { withRouter } from \"next/router\"\r\nimport jwt from \"jsonwebtoken\"\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport { API } from \"../../../../config.js\"\r\nimport Layout from \"../../../../components/Layout\"\r\n\r\nconst ResetPassword = ({ router }) => {\r\n  console.log(router.query.token)\r\n  const [userState, setUserState] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    newPassword: \"\",\r\n    buttonText: \"Reset Password\",\r\n    success: \"\",\r\n    error: \"\",\r\n  })\r\n  const { name, token, newPassword, buttonText, success, error } = userState\r\n\r\n  useEffect(() => {\r\n    const { name } = jwt.decode(router.query.token)\r\n    // if (name) {\r\n    //   setUserState({ ...userState, name: name })\r\n    // }\r\n    console.log(name)\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      Reset Password\r\n      <ToastContainer />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default withRouter(ResetPassword)\r\n"]},"metadata":{},"sourceType":"module"}