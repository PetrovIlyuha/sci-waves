{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courses Projects In Work\\\\Portfolio\\\\sci-waves\\\\client\\\\pages\\\\register.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport Layout from \"../components/Layout\";\n\nconst Register = () => {\n  const {\n    0: formState,\n    1: setFormState\n  } = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: \"\",\n    buttonText: \"Register\"\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success,\n    buttonText\n  } = formState;\n\n  const handleFormInputChange = name => e => {\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      [name]: e.target.value,\n      error: \"\",\n      success: \"\",\n      buttonText: \"Register\"\n    }));\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:4000/api/register\").then(data => data.json()).then(data => console.log(data));\n    console.log(name, email, password);\n  };\n\n  console.log(formState);\n\n  const registerForm = () => __jsx(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Username\"), __jsx(\"input\", {\n    onChange: handleFormInputChange(\"name\"),\n    type: \"text\",\n    value: name,\n    id: \"name\",\n    className: \"form-control\",\n    placeholder: \"Ironman...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    onChange: handleFormInputChange(\"email\"),\n    type: \"email\",\n    value: email,\n    id: \"email\",\n    className: \"form-control\",\n    placeholder: \"warrior@galaxy.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    value: password,\n    id: \"password\",\n    className: \"form-control\",\n    onChange: handleFormInputChange(\"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"btn mx-auto btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"register__page_layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"shapes__register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"cloud__register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"register-overlay col-md-6 offset-6 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, registerForm())));\n};\n\nexport default Register;","map":{"version":3,"sources":["D:/Courses Projects In Work/Portfolio/sci-waves/client/pages/register.jsx"],"names":["useState","Layout","Register","formState","setFormState","name","email","password","error","success","buttonText","handleFormInputChange","e","target","value","handleFormSubmit","preventDefault","fetch","then","data","json","console","log","registerForm"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nconst Register = () => {\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: \"\",\r\n    buttonText: \"Register\",\r\n  });\r\n\r\n  const { name, email, password, error, success, buttonText } = formState;\r\n\r\n  const handleFormInputChange = (name) => (e) => {\r\n    setFormState({\r\n      ...formState,\r\n      [name]: e.target.value,\r\n      error: \"\",\r\n      success: \"\",\r\n      buttonText: \"Register\",\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"http://localhost:4000/api/register\")\r\n      .then((data) => data.json())\r\n      .then((data) => console.log(data));\r\n    console.log(name, email, password);\r\n  };\r\n\r\n  console.log(formState);\r\n  const registerForm = () => (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Username</label>\r\n        <input\r\n          onChange={handleFormInputChange(\"name\")}\r\n          type=\"text\"\r\n          value={name}\r\n          id=\"name\"\r\n          className=\"form-control\"\r\n          placeholder=\"Ironman...\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          onChange={handleFormInputChange(\"email\")}\r\n          type=\"email\"\r\n          value={email}\r\n          id=\"email\"\r\n          className=\"form-control\"\r\n          placeholder=\"warrior@galaxy.com\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          id=\"password\"\r\n          className=\"form-control\"\r\n          onChange={handleFormInputChange(\"password\")}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <button className=\"btn mx-auto btn-outline-warning\">\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"register__page_layout\">\r\n        <div className=\"shapes__register\"></div>\r\n        <div className=\"cloud__register\"></div>\r\n        {/* <div className=\"register-page-person col-md-6 mt-5\"></div> */}\r\n        <div className=\"register-overlay col-md-6 offset-6 mt-5\">\r\n          {registerForm()}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}