{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Courses Projects In Work\\\\Portfolio\\\\sci-waves\\\\client\\\\pages\\\\register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../components/Layout\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { API } from \"../config.js\";\nimport { isUserAuthenticated } from \"../utils/helpers\";\nimport Router from \"next/router\";\n\nvar Register = function Register() {\n  _s();\n\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: \"\",\n    buttonText: \"Register\"\n  }),\n      formState = _useState[0],\n      setFormState = _useState[1];\n\n  var name = formState.name,\n      email = formState.email,\n      password = formState.password,\n      error = formState.error,\n      success = formState.success,\n      buttonText = formState.buttonText;\n  useEffect(function () {\n    {\n      success && toast.success(\"\".concat(success), {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n    {\n      error && toast.error(\"\".concat(error), {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  }, [success, error]);\n  useEffect(function () {\n    isUserAuthenticated() && Router.push(\"/\");\n  }, []);\n\n  var handleFormInputChange = function handleFormInputChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setFormState(_objectSpread(_objectSpread({}, formState), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", \"\"), _defineProperty(_objectSpread2, \"success\", \"\"), _defineProperty(_objectSpread2, \"buttonText\", \"Register\"), _objectSpread2)));\n    };\n  };\n\n  var handleFormSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n                buttonText: \"Sending!\"\n              }));\n              e.preventDefault();\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(\"\".concat(API, \"/register\"), {\n                name: name,\n                email: email,\n                password: password\n              });\n\n            case 5:\n              response = _context.sent;\n              setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n                name: \"\",\n                email: \"\",\n                password: \"\",\n                buttonText: \"Submitted\",\n                success: response.data.message\n              }));\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n              setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n                error: _context.t0.response.data.error\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function handleFormSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleFormSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, \"Register\"), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Username\"), __jsx(\"input\", {\n      onChange: handleFormInputChange(\"name\"),\n      type: \"text\",\n      value: name,\n      id: \"name\",\n      className: \"form-control\",\n      placeholder: \"Ironman...\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      onChange: handleFormInputChange(\"email\"),\n      type: \"email\",\n      value: email,\n      id: \"email\",\n      className: \"form-control\",\n      placeholder: \"warrior@galaxy.com\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Password\"), __jsx(\"input\", {\n      type: \"password\",\n      value: password,\n      id: \"password\",\n      className: \"form-control\",\n      onChange: handleFormInputChange(\"password\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      className: \"btn mx-auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"register-overlay col-md-6 mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, registerForm()), __jsx(ToastContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Register, \"e7dpWEPzBclvZKDpW6iv7iMKI6Q=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Courses Projects In Work/Portfolio/sci-waves/client/pages/register.jsx"],"names":["useState","useEffect","axios","Layout","ToastContainer","toast","API","isUserAuthenticated","Router","Register","name","email","password","error","success","buttonText","formState","setFormState","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","push","handleFormInputChange","e","target","value","handleFormSubmit","preventDefault","post","response","data","message","console","log","registerForm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport Layout from \"../components/Layout\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport { API } from \"../config.js\"\r\nimport { isUserAuthenticated } from \"../utils/helpers\"\r\nimport Router from \"next/router\"\r\n\r\nconst Register = () => {\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: \"\",\r\n    buttonText: \"Register\",\r\n  })\r\n\r\n  const { name, email, password, error, success, buttonText } = formState\r\n\r\n  useEffect(() => {\r\n    {\r\n      success &&\r\n        toast.success(`${success}`, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n    {\r\n      error &&\r\n        toast.error(`${error}`, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n  }, [success, error])\r\n\r\n  useEffect(() => {\r\n    isUserAuthenticated() && Router.push(\"/\")\r\n  }, [])\r\n\r\n  const handleFormInputChange = (name) => (e) => {\r\n    setFormState({\r\n      ...formState,\r\n      [name]: e.target.value,\r\n      error: \"\",\r\n      success: \"\",\r\n      buttonText: \"Register\",\r\n    })\r\n  }\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    setFormState({ ...formState, buttonText: \"Sending!\" })\r\n    e.preventDefault()\r\n    try {\r\n      const response = await axios.post(`${API}/register`, {\r\n        name,\r\n        email,\r\n        password,\r\n      })\r\n      setFormState({\r\n        ...formState,\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        buttonText: \"Submitted\",\r\n        success: response.data.message,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setFormState({ ...formState, error: error.response.data.error })\r\n    }\r\n  }\r\n  const registerForm = () => (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <h2>Register</h2>\r\n      <div className='form-group'>\r\n        <label htmlFor='name'>Username</label>\r\n        <input\r\n          onChange={handleFormInputChange(\"name\")}\r\n          type='text'\r\n          value={name}\r\n          id='name'\r\n          className='form-control'\r\n          placeholder='Ironman...'\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label htmlFor='email'>Email</label>\r\n        <input\r\n          onChange={handleFormInputChange(\"email\")}\r\n          type='email'\r\n          value={email}\r\n          id='email'\r\n          className='form-control'\r\n          placeholder='warrior@galaxy.com'\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label htmlFor='password'>Password</label>\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          id='password'\r\n          className='form-control'\r\n          onChange={handleFormInputChange(\"password\")}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <button className='btn mx-auto'>{buttonText}</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <Layout>\r\n      <div className='register-overlay col-md-6 mt-5'>{registerForm()}</div>\r\n      <ToastContainer />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}