{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Courses Projects In Work\\\\Portfolio\\\\sci-waves\\\\client\\\\pages\\\\auth\\\\password\\\\reset\\\\[token].jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Router, { withRouter } from \"next/router\";\nimport jwt from \"jsonwebtoken\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { API } from \"../../../../config.js\";\nimport Layout from \"../../../../components/Layout\";\n\nvar ResetPassword = function ResetPassword(_ref) {\n  _s();\n\n  var router = _ref.router;\n\n  var _useState = useState({\n    name: \"\",\n    token: \"\",\n    newPassword: \"\",\n    buttonText: \"Reset Password\",\n    success: \"\",\n    error: \"\"\n  }),\n      userState = _useState[0],\n      setUserState = _useState[1];\n\n  var name = userState.name,\n      token = userState.token,\n      newPassword = userState.newPassword,\n      buttonText = userState.buttonText,\n      success = userState.success,\n      error = userState.error;\n  useEffect(function () {\n    var _jwt$decode = jwt.decode(router.query.token),\n        name = _jwt$decode.name;\n\n    console.log(name);\n  }, []);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"Reset Password\", __jsx(ToastContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ResetPassword, \"ygnsOc0P75eIBY0RWKLHMsHeeko=\");\n\n_c = ResetPassword;\nexport default _c2 = withRouter(ResetPassword);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ResetPassword\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Courses Projects In Work/Portfolio/sci-waves/client/pages/auth/password/reset/[token].jsx"],"names":["useState","useEffect","axios","Router","withRouter","jwt","ToastContainer","toast","API","Layout","ResetPassword","router","name","token","newPassword","buttonText","success","error","userState","setUserState","decode","query","console","log"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,GAAT,QAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACFX,QAAQ,CAAC;AACzCY,IAAAA,IAAI,EAAE,EADmC;AAEzCC,IAAAA,KAAK,EAAE,EAFkC;AAGzCC,IAAAA,WAAW,EAAE,EAH4B;AAIzCC,IAAAA,UAAU,EAAE,gBAJ6B;AAKzCC,IAAAA,OAAO,EAAE,EALgC;AAMzCC,IAAAA,KAAK,EAAE;AANkC,GAAD,CADN;AAAA,MAC7BC,SAD6B;AAAA,MAClBC,YADkB;;AAAA,MAS5BP,IAT4B,GAS6BM,SAT7B,CAS5BN,IAT4B;AAAA,MAStBC,KATsB,GAS6BK,SAT7B,CAStBL,KATsB;AAAA,MASfC,WATe,GAS6BI,SAT7B,CASfJ,WATe;AAAA,MASFC,UATE,GAS6BG,SAT7B,CASFH,UATE;AAAA,MASUC,OATV,GAS6BE,SAT7B,CASUF,OATV;AAAA,MASmBC,KATnB,GAS6BC,SAT7B,CASmBD,KATnB;AAWpChB,EAAAA,SAAS,CAAC,YAAM;AAAA,sBACGI,GAAG,CAACe,MAAJ,CAAWT,MAAM,CAACU,KAAP,CAAaR,KAAxB,CADH;AAAA,QACND,IADM,eACNA,IADM;;AAEdU,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAtBD;;GAAMF,a;;KAAAA,a;AAwBN,qBAAeN,UAAU,CAACM,aAAD,CAAzB","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport Router, { withRouter } from \"next/router\"\r\nimport jwt from \"jsonwebtoken\"\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport { API } from \"../../../../config.js\"\r\nimport Layout from \"../../../../components/Layout\"\r\n\r\nconst ResetPassword = ({ router }) => {\r\n  const [userState, setUserState] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    newPassword: \"\",\r\n    buttonText: \"Reset Password\",\r\n    success: \"\",\r\n    error: \"\",\r\n  })\r\n  const { name, token, newPassword, buttonText, success, error } = userState\r\n\r\n  useEffect(() => {\r\n    const { name } = jwt.decode(router.query.token)\r\n    console.log(name)\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      Reset Password\r\n      <ToastContainer />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default withRouter(ResetPassword)\r\n"]},"metadata":{},"sourceType":"module"}