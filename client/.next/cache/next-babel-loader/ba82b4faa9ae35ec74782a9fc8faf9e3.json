{"ast":null,"code":"import cookie from \"js-cookie\"; // setting cookie\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 7\n    });\n  }\n}; // removing cookie\n\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key);\n  }\n}; // get cookie from storage\n\nexport const getCookie = (key, req) => {\n  return false ? getCookieClientSide(key) : getCookieServerSide(key, req);\n};\nexport const getCookieClientSide = key => {\n  return cookie.get(key);\n};\nexport const getCookieServerSide = (key, req) => {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  console.log(\"req.headers.cookie\", req.headers.cookie);\n  let token = req.headers.cookie.split(\";\").find(cookie => cookie.trim().startsWith(`${key}=`));\n  if (!token) return undefined;\n  let tokenValue = token.split(\"=\")[1];\n  console.log(\"Get cookie from server\", tokenValue);\n  return tokenValue;\n}; // save to local storage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; // clear local storage\n\nexport const clearLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; // user authentication\n\nexport const authenticateUser = (response, next) => {\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  next();\n}; // get user data from local storage\n\nexport const isUserAuthenticated = () => {\n  if (false) {\n    const cookiePresent = getCookie(\"token\");\n\n    if (cookiePresent) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n}; // log out user\n\nexport const logOutUser = () => {\n  if (false) {\n    clearLocalStorage(\"user\");\n    removeCookie(\"token\");\n  }\n};","map":{"version":3,"sources":["D:/Courses Projects In Work/Portfolio/sci-waves/client/utils/helpers.js"],"names":["cookie","setCookie","key","value","set","expires","removeCookie","remove","getCookie","req","getCookieClientSide","getCookieServerSide","get","headers","undefined","console","log","token","split","find","trim","startsWith","tokenValue","setLocalStorage","localStorage","setItem","JSON","stringify","clearLocalStorage","removeItem","authenticateUser","response","next","data","user","isUserAuthenticated","cookiePresent","getItem","parse","logOutUser"],"mappings":"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","sourcesContent":["import cookie from \"js-cookie\"\r\n\r\n// setting cookie\r\nexport const setCookie = (key, value) => {\r\n  if (process.browser) {\r\n    cookie.set(key, value, {\r\n      expires: 7,\r\n    })\r\n  }\r\n}\r\n\r\n// removing cookie\r\nexport const removeCookie = (key) => {\r\n  if (process.browser) {\r\n    cookie.remove(key)\r\n  }\r\n}\r\n\r\n// get cookie from storage\r\nexport const getCookie = (key, req) => {\r\n  return process.browser\r\n    ? getCookieClientSide(key)\r\n    : getCookieServerSide(key, req)\r\n}\r\n\r\nexport const getCookieClientSide = (key) => {\r\n  return cookie.get(key)\r\n}\r\n\r\nexport const getCookieServerSide = (key, req) => {\r\n  if (!req.headers.cookie) {\r\n    return undefined\r\n  }\r\n  console.log(\"req.headers.cookie\", req.headers.cookie)\r\n  let token = req.headers.cookie\r\n    .split(\";\")\r\n    .find((cookie) => cookie.trim().startsWith(`${key}=`))\r\n  if (!token) return undefined\r\n  let tokenValue = token.split(\"=\")[1]\r\n  console.log(\"Get cookie from server\", tokenValue)\r\n  return tokenValue\r\n}\r\n\r\n// save to local storage\r\nexport const setLocalStorage = (key, value) => {\r\n  if (process.browser) {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  }\r\n}\r\n\r\n// clear local storage\r\nexport const clearLocalStorage = (key) => {\r\n  if (process.browser) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\n// user authentication\r\nexport const authenticateUser = (response, next) => {\r\n  setCookie(\"token\", response.data.token)\r\n  setLocalStorage(\"user\", response.data.user)\r\n  next()\r\n}\r\n\r\n// get user data from local storage\r\nexport const isUserAuthenticated = () => {\r\n  if (process.browser) {\r\n    const cookiePresent = getCookie(\"token\")\r\n    if (cookiePresent) {\r\n      if (localStorage.getItem(\"user\")) {\r\n        return JSON.parse(localStorage.getItem(\"user\"))\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// log out user\r\nexport const logOutUser = () => {\r\n  if (process.browser) {\r\n    clearLocalStorage(\"user\")\r\n    removeCookie(\"token\")\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}